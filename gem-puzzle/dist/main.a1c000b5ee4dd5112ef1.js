!function(Q){function n(n){for(var F,B,U=n[0],l=n[1],i=n[2],a=0,c=[];a<U.length;a++)B=U[a],Object.prototype.hasOwnProperty.call(t,B)&&t[B]&&c.push(t[B][0]),t[B]=0;for(F in l)Object.prototype.hasOwnProperty.call(l,F)&&(Q[F]=l[F]);for(r&&r(n);c.length;)c.shift()();return s.push.apply(s,i||[]),e()}function e(){for(var Q,n=0;n<s.length;n++){for(var e=s[n],F=!0,U=1;U<e.length;U++){var l=e[U];0!==t[l]&&(F=!1)}F&&(s.splice(n--,1),Q=B(B.s=e[0]))}return Q}var F={},t={0:0},s=[];function B(n){if(F[n])return F[n].exports;var e=F[n]={i:n,l:!1,exports:{}};return Q[n].call(e.exports,e,e.exports,B),e.l=!0,e.exports}B.m=Q,B.c=F,B.d=function(Q,n,e){B.o(Q,n)||Object.defineProperty(Q,n,{enumerable:!0,get:e})},B.r=function(Q){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(Q,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(Q,"__esModule",{value:!0})},B.t=function(Q,n){if(1&n&&(Q=B(Q)),8&n)return Q;if(4&n&&"object"==typeof Q&&Q&&Q.__esModule)return Q;var e=Object.create(null);if(B.r(e),Object.defineProperty(e,"default",{enumerable:!0,value:Q}),2&n&&"string"!=typeof Q)for(var F in Q)B.d(e,F,function(n){return Q[n]}.bind(null,F));return e},B.n=function(Q){var n=Q&&Q.__esModule?function(){return Q.default}:function(){return Q};return B.d(n,"a",n),n},B.o=function(Q,n){return Object.prototype.hasOwnProperty.call(Q,n)},B.p="";var U=window.webpackJsonp=window.webpackJsonp||[],l=U.push.bind(U);U.push=n,U=U.slice();for(var i=0;i<U.length;i++)n(U[i]);var r=l;s.push([121,1]),e()}({121:function(Q,n,e){e(122),Q.exports=e(310)},308:function(module,exports){eval("//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIzMDguanMiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///308\n")},309:function(module,exports,__webpack_require__){eval("// extracted by mini-css-extract-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zdHlsZXMvdGVzdC5zY3NzPzlkNDQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoiMzA5LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///309\n")},310:function(module,__webpack_exports__,__webpack_require__){"use strict";eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXTERNAL MODULE: ./babel.js\nvar babel = __webpack_require__(308);\n\n// EXTERNAL MODULE: ./styles/test.scss\nvar test = __webpack_require__(309);\n\n// CONCATENATED MODULE: ./js/utils/create.js\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n/**\n * @param {String} el\n * @param {String} classNames\n * @param {HTMLElement} child\n * @param {HTMLElement} parent\n * @param {...array} dataAttr\n */\nfunction create(el, classNames, child, parent) {\n  var _element$classList;\n\n  var element = null;\n\n  try {\n    element = document.createElement(el);\n  } catch (error) {\n    throw new Error('Unable to create HTMLElement!');\n  }\n\n  if (classNames) (_element$classList = element.classList).add.apply(_element$classList, _toConsumableArray(classNames.split(' ')));\n\n  if (child && Array.isArray(child)) {\n    child.forEach(function (childElement) {\n      return childElement && element.appendChild(childElement);\n    });\n  } else if (child && _typeof(child) === 'object') {\n    element.appendChild(child);\n  } else if (child && typeof child === 'string') {\n    element.innerHTML = child;\n  }\n\n  if (parent) {\n    parent.appendChild(element);\n  }\n\n  for (var _len = arguments.length, dataAttr = new Array(_len > 4 ? _len - 4 : 0), _key = 4; _key < _len; _key++) {\n    dataAttr[_key - 4] = arguments[_key];\n  }\n\n  if (dataAttr.length) {\n    dataAttr.forEach(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n          attrName = _ref2[0],\n          attrValue = _ref2[1];\n\n      if (attrValue === '') {\n        element.setAttribute(attrName, '');\n      }\n\n      if (attrName.match(/value|id|placeholder|cols|rows|autocorrect|spellcheck|src|style/)) {\n        element.setAttribute(attrName, attrValue);\n      } else {\n        element.dataset[attrName] = attrValue;\n      }\n    });\n  }\n\n  return element;\n}\n// CONCATENATED MODULE: ./js/main.js\nfunction main_toConsumableArray(arr) { return main_arrayWithoutHoles(arr) || main_iterableToArray(arr) || main_unsupportedIterableToArray(arr) || main_nonIterableSpread(); }\n\nfunction main_nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction main_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return main_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return main_arrayLikeToArray(o, minLen); }\n\nfunction main_iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction main_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return main_arrayLikeToArray(arr); }\n\nfunction main_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n // Init DOM element\n\nvar main = create('div', 'game-wrapper', [create('div', 'title', 'Gem Puzzles!')]);\nvar buttons = create('div', 'buttons-wrapper', [create('button', 'button new-game', 'New Game'), create('button', 'button save-game', 'Save Game'), create('button', 'button sound', '<span class=\"material-icons\">volume_up</span>'), create('button', 'button score', 'Score')]);\nvar soundWrapper = create('div', 'sound-wrapper', [create('audio', null, null, null, ['src', '../assets/audio/click-cell.wav']), create('audio', null, null, null, ['src', '../assets/audio/click-button.wav'])]);\n\nvar main_Game = /*#__PURE__*/function () {\n  function Game(size) {\n    var _this = this;\n\n    _classCallCheck(this, Game);\n\n    _defineProperty(this, \"handlerEvent\", function (e) {\n      console.log('e.target.className', e.target.className); // BUTTONS HANDLERS\n\n      if (_this.soundOn) {\n        soundWrapper.childNodes[1].currentTime = 0;\n        soundWrapper.childNodes[1].play();\n        console.log('click buttons');\n      }\n\n      if (e.target.className.match(/sound/)) {\n        _this.switchSound(e);\n      }\n\n      if (e.target.className.match(/new-game/)) {\n        _this.newGame();\n      } // if(e.target.className === 'save-game') {}\n      // if(e.target.className === 'score') {}\n\n    });\n\n    _defineProperty(this, \"switchSound\", function (e) {\n      var soundButton = e.target.lastChild;\n\n      if (_this.soundOn) {\n        soundButton.innerHTML = '<span class=\"material-icons\">volume_off</span>';\n        _this.soundOn = false;\n      } else {\n        soundButton.innerHTML = '<span class=\"material-icons\">volume_up</span>';\n        _this.soundOn = true;\n      }\n    });\n\n    this.size = size;\n    this.field = create('div', 'field', null, main);\n    this.buttons = buttons;\n    this.sizeCell = 50;\n    this.soundOn = true;\n  } // Add element on HTML markup\n\n\n  _createClass(Game, [{\n    key: \"init\",\n    value: function init() {\n      document.body.prepend(main, buttons, soundWrapper);\n      this.buttons.addEventListener('click', this.handlerEvent);\n      return this;\n    }\n  }, {\n    key: \"generateField\",\n    value: function generateField() {\n      var _this2 = this;\n\n      this.cells = []; // Set field sizes\n\n      this.field.style.width = \"\".concat(this.size * this.sizeCell, \"px\");\n      this.field.style.height = \"\".concat(this.size * this.sizeCell, \"px\");\n\n      var randomNumbers = main_toConsumableArray(Array(Math.pow(this.size, 2) - 1).keys()).sort(function () {\n        return Math.random() - 0.5;\n      }); // console.log('randomNumbers:', randomNumbers);\n      // Generate puzzle cells\n\n\n      var _loop = function _loop(i) {\n        var left = i % _this2.size;\n        var top = (i - left) / _this2.size;\n        _this2.cell = create('div', 'cell', \"\".concat(randomNumbers[i] + 1), _this2.field, ['id', \"\".concat(randomNumbers[i] + 1)], ['style', \"top: \".concat(top * _this2.sizeCell, \"px; left: \").concat(left * _this2.sizeCell, \"px;\")]);\n\n        _this2.cells.push({\n          number: randomNumbers[i] + 1,\n          left: left,\n          top: top,\n          item: _this2.cell,\n          active: false\n        });\n\n        _this2.cell.addEventListener('click', function () {\n          return _this2.cellMove(i);\n        });\n      };\n\n      for (var i = 0; i < Math.pow(this.size, 2) - 1; i++) {\n        _loop(i);\n      }\n\n      this.emptyCell = {\n        number: this.cells.length + 1,\n        left: this.cells.length % this.size,\n        top: (this.cells.length - this.cells.length % this.size) / this.size\n      };\n      this.cells.push(this.emptyCell);\n      console.log(this.cells);\n    }\n  }, {\n    key: \"cellMove\",\n    value: function cellMove(index) {\n      var cell = this.cells[index];\n      var leftDiff = Math.abs(this.emptyCell.left - cell.left);\n      var topDiff = Math.abs(this.emptyCell.top - cell.top);\n\n      if (this.soundOn) {\n        soundWrapper.childNodes[0].currentTime = 0;\n        soundWrapper.childNodes[0].play();\n        console.log('click cells');\n      } // We process click of only adjacent cells horizontall or verticall\n\n\n      if (leftDiff + topDiff <= 1) {\n        cell.item.style.left = \"\".concat(this.emptyCell.left * this.sizeCell, \"px\");\n        cell.item.style.top = \"\".concat(this.emptyCell.top * this.sizeCell, \"px\");\n        var _ref = [cell.left, this.emptyCell.left];\n        this.emptyCell.left = _ref[0];\n        cell.left = _ref[1];\n        var _ref2 = [cell.top, this.emptyCell.top];\n        this.emptyCell.top = _ref2[0];\n        cell.top = _ref2[1];\n      } else return; // Check is finish\n\n\n      this.checkFinish();\n    }\n  }, {\n    key: \"checkFinish\",\n    value: function checkFinish() {\n      var _this3 = this;\n\n      // Add or remove --active class for cell on correct position\n      this.cells.forEach(function (elem) {\n        if (elem.item) {\n          if (elem.number - 1 === elem.top * _this3.size + elem.left) {\n            elem.item.classList.add(\"cell--active\");\n            elem.active = true;\n          } else if (elem.number - 1 !== elem.top * _this3.size + elem.left && elem.active === true) {\n            elem.item.classList.remove(\"cell--active\");\n          }\n        }\n      }); // Check all cells on correct position\n\n      var isFinished = this.cells.every(function (cell) {\n        return cell.number - 1 === cell.top * _this3.size + cell.left;\n      });\n\n      if (isFinished) {\n        setTimeout(\"alert('You win!')\", 300);\n      }\n    } // Start New Game without reload page\n\n  }, {\n    key: \"newGame\",\n    value: function newGame() {\n      console.log('new game!');\n      this.field.remove();\n      this.field = create('div', 'field', null, main);\n      this.generateField();\n    }\n  }]);\n\n  return Game;\n}();\n\n\n// CONCATENATED MODULE: ./index.js\n// import Logo from './assets/logo'\n\n\n\n\n\nnew main_Game(4).init().generateField();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///310\n")}});